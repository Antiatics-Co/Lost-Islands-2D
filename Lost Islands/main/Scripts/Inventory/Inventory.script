--@Title - Inventory
--@Author - Aidan Cox
--@Version - 1
--@Description - The Inventory system

-- these are the item numbers, for use in the inventory

--Physical

local EMPTY = 0 -- this is the default in the equiped section
local WOODSWORD = 1
local BROADSWORD = 2
local SPEAR = 3
local BOW = 4

--shields

local WOOD = 5
local STEEL = 6
local MAGICSHIELD = 7

--Armour

local LIGHT = 8
local HEAVY = 9
local MAGIC = 10

--Elements

local FIRENUM = 11
local WATER = 12
local STONE = 13


--Quest Items - first num is item num, 2nd is total num of items possible, going to set to 10 for now

local FIREDUNGEONKEYS = { 14, 10 }--Player can only have one type of key  at a time, any leftover keys are Applied once the player reenters the dungeon
local WATERDUNGEONKEYS = { 15, 10 }
local STONEDUNGEONKEYS = { 16, 10 }

--Money and Arrows --have a special section in inventory, may be in hud, same with keys

local ARROW = { 17, 40 }
local PENDAL = { 18, 100 }

local EMPTYMISC = { 0, 0 }

local items = { empty = EMPTY, woodSword = EMPTY, broadsword = EMPTY, spear = EMPTY, bow = EMPTY, 
woodShield = EMPTY, steelShiel = EMPTY, magicShield = EMPTY, 
lightArmour = EMPTY, heavyArmour = EMPTY, magicArmour = EMPTY, fireElement = EMPTY, 
waterElement = EMPTY, stoneElement = EMPTY, fireDungeonKeys = EMPTYMISC, waterDungeonKeys = EMPTYMISC,
stoneDungeonKeys = EMPTYMISC, arrow = EMPTYMISC, pendal = EMPTYMISC, itemVersion = 1 } --set number to item num above 0 default


--[[ Planning

1. player picks up item
2. player sends item information?  then all items are a game object.

	this file just compiles all the items the player has, and the number of them, 
	Item shops, would check to see if item exists in inventory, or if number is at limit
	
	]]

function save()
	msg.post("menu#PauseMenu", "itemsReady", {itemData = items} )
	print("Save Data Posted From Inventory")
end

function init(self)
	-- Add initialization code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function final(self)
	-- Add finalization code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function update(self, dt)
	-- Add update code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function fixed_update(self, dt)
	-- This function is called if 'Fixed Update Frequency' is enabled in the Engine section of game.project
	-- Can be coupled with fixed updates of the physics simulation if 'Use Fixed Timestep' is enabled in
	-- Physics section of game.project
	-- Add update code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function on_message(self, message_id, message, sender)
	if message_id == "fileSave" then
		save()
	end
end

function on_input(self, action_id, action)
	-- Add input-handling code here. The game object this script is attached to
	-- must have acquired input focus:
	--
	--    msg.post(".", "acquire_input_focus")
	--
	-- All mapped input bindings will be received. Mouse and touch input will
	-- be received regardless of where on the screen it happened.
	-- Learn more: https://defold.com/manuals/input/
	-- Remove this function if not needed
end
